name: EAS Build (Android)

on:
  push:
    tags:
      - 'v*'    # Triggers on tags like v0.1.0, v1.2.3, etc.

jobs:
  build-android:
    runs-on: ubuntu-latest

    steps:
      - name: âœ… Check for EAS_ACCESS_TOKEN
        run: echo "EAS token is present."
        if: env.EAS_ACCESS_TOKEN != ''
        env:
          EAS_ACCESS_TOKEN: ${{ secrets.EAS_ACCESS_TOKEN }}

      - name: ðŸ“¥ Checkout source
        uses: actions/checkout@v3

      - name: ðŸ”§ Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: ðŸ“¦ Install dependencies
        run: npm install

      - name: ðŸ“¦ Install eas-cli
        run: npm install -g eas-cli

      - name: ðŸš€ Trigger EAS Build (Android)
        run: eas build --platform android --profile production --non-interactive
        env:
          EAS_ACCESS_TOKEN: ${{ secrets.EAS_ACCESS_TOKEN }}
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

      - name: ðŸ§  Fetch latest build info
        id: fetch-build
        run: |
          LATEST_BUILD_URL=$(curl -s -H "Authorization: Bearer $EAS_ACCESS_TOKEN" \
            -X POST https://api.expo.dev/graphql \
            -H "Content-Type: application/json" \
            --data '{"query":"{ builds(limit: 1, platform: ANDROID) { id, platform, status, artifacts { buildUrl } } }"}' \
          | jq -r '.data.builds[0].artifacts.buildUrl')
          
          echo "APK_URL=$LATEST_BUILD_URL" >> "$GITHUB_OUTPUT"
        env:
          EAS_ACCESS_TOKEN: ${{ secrets.EAS_ACCESS_TOKEN }}

      - name: ðŸ“¦ Download and rename APK
        run: |
          TAG_NAME=${GITHUB_REF##*/}
          curl -o ritmio-$TAG_NAME.apk "${{ steps.fetch-build.outputs.APK_URL }}"

      - name: ðŸš€ Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          files: ritmio-${{ github.ref_name }}.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}